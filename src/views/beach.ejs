<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Where's Waldo?</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        /* display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center; */
      }
      img {
        /* object-fit: none; */
      }
      .canvas {
        /* position: absolute; */
        /* width: 100%;
        height: 100%; */
        /* left: 0;
        top: 0; */
      }
      .red {
        background-color: red;
      }
      .green {
        background-color: green;
      }
      .timer {
        font-size: 30px;
        font-weight: bold;
      }
      .waldo,
      .whitebeard,
      .odlaw {
        width: 100px;
        height: 50px;
        border: 1px solid black;
        display: flex;
        gap: 10px;
        justify-content: center;
        align-items: center;
      }
      .waldo:hover,
      .whitebeard:hover,
      .odlaw:hover {
        background-color: antiquewhite;
      }
      .icon {
        height: 35px;
        width: 35px;
      }
      .header {
        background-color: antiquewhite;
        height: 150px;
        /* position: fixed;
        width: 100vw; */
        position: sticky;
        width: 3000px;
        border-bottom: 2px solid black;
        top: 0;
        display: flex;
        align-items: center;
        padding: 20px;
        justify-content: space-evenly;
      }
      .header img {
        border: 1px solid black;
      }
      .group {
        display: flex;
        gap: 20px;
      }
      .col {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 10px;
      }
      .colored {
        color: red;
      }
      .circle {
        width: 30px;
        height: 30px;
        border-radius: 50%;
      }
      .colorgr {
        color: green;
      }
      .finaldiv {
        background-color: antiquewhite;
        width: 500px;
        height: 300px;
        position: fixed;
        left: 45%;
        top: 45%;
        z-index: 2;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: center;
        /* gap: 10px; */
        padding: 10px;
        border: 3px solid black;
      }
      .finalbutton {
        width: 50px;
        height: 30px;
      }
      /* @media (max-width: 2000px) { 
        .header {
          position: sticky;
          width: 3000px;
        }
       } */
    </style>
  </head>
  <body>
    <div class="header">
      <div class="timer"></div>
      <h2>Find these characters!</h2>
      <div class="group">
        <img src="waldoface.png" width="100" height="100" />
        <div class="col">
          <div class="circle red" id="walc"></div>
          <h2>Waldo</h3>
          <h3 class="colored" id="walt">Not Found</h2>
        </div>
      </div>
      <div class="group">
        <img src="odlawface.webp" width="100" height="100" />
        <div class="col">
          <div class="circle red" id="odlc"></div>
          <h3>Odlaw</h3>
          <h3 class="colored" id="odlt">Not Found</h2>
        </div>
      </div>
      <div class="group">
        <img src="whitebeardface.png" width="100" height="100" />
        <div class="col">
          <div class="circle red" id="wizc"></div>
          <h3>Wizard Whitebeard</h3>
          <h3 class="colored" id="wizt">Not Found</h2>
        </div>
      </div>
    </div>
    <div class="clickable">
      <img src="whereswaldo.jpg" class="cable" />
      <div class="canvas"></div>
    </div>
    <script>
      let id;
      let date;
      let interval;
      let timer = document.querySelector(".timer");
      async function startup() {
        let request = await fetch("http://localhost:3000/api", {
          mode: "cors",
          method: "POST",
          body: JSON.stringify({
            map: "beach",
          }),
          headers: {
            "Content-type": "application/json; charset=UTF-8",
          },
        })
          .then((response) => response.json())
          .then((response) => {
            if (response.result) {
              id = response.result;
              date = response.date;
              setTimer(date);
            } else {
              throw new Error("API fetch error");
            }
          })
          .catch((error) => console.error(error));
      }
      function setTimer (date) {
        const start = new Date(date);
        function updateTime () {
          let end = Date.now();
          let di = new Date(end - start);
          let diff = new Date(end - start).toISOString().slice(14, -1).toString();
          timer.textContent = diff;
        }
        interval = setInterval(updateTime, 10);
      }
      async function waldoreq(x, y) {
        let request = await fetch("http://localhost:3000/api/waldo", {
          mode: "cors",
          method: "POST",
          body: JSON.stringify({
            id: id,
            x: x,
            y: y,
          }),
          headers: {
            "Content-type": "application/json; charset=UTF-8",
          },
        })
          .then((response) => response.json())
          .then((response) => {
            if (response.result) {
              if (response.result === "Right!") {
                lastGuess = "y";
                return "y";
              } else {
                lastGuess = "n";
                return "n";
              }
            } else {
              throw new Error("API fetch error");
            }
          })
          .catch((error) => console.error(error));
      }
      async function odlawreq(x, y) {
        let request = await fetch("http://localhost:3000/api/odlaw", {
          mode: "cors",
          method: "POST",
          body: JSON.stringify({
            id: id,
            x: x,
            y: y,
          }),
          headers: {
            "Content-type": "application/json; charset=UTF-8",
          },
        })
          .then((response) => response.json())
          .then((response) => {
            if (response.result) {
              if (response.result === "Right!") {
                lastGuess = "y";
                return "y";
              } else {
                lastGuess = "n";
                return "n";
              }
            } else {
              throw new Error("API fetch error");
            }
          })
          .catch((error) => console.error(error));
      }
      async function wizardreq(x, y) {
        let request = await fetch("http://localhost:3000/api/wizard", {
          mode: "cors",
          method: "POST",
          body: JSON.stringify({
            id: id,
            x: x,
            y: y,
          }),
          headers: {
            "Content-type": "application/json; charset=UTF-8",
          },
        })
          .then((response) => response.json())
          .then((response) => {
            if (response.result) {
              if (response.result === "Right!") {
                lastGuess = "y";
                return "y";
              } else {
                lastGuess = "n";
                return "n";
              }
            } else {
              throw new Error("API fetch error");
            }
          })
          .catch((error) => console.error(error));
      }
      startup();
      let waldoFound = false;
      let odlawFound = false;
      let wizardFound = false;
      let waldosLeft = 3;
      let lastGuess = "";
      async function checkWin () {
        if (waldosLeft === 0) {
          let time;
          cable.removeEventListener("click", circle);
          let div = document.createElement("div");
          let request = await fetch("http://localhost:3000/api/time", {
          mode: "cors",
          method: "POST",
          body: JSON.stringify({
            id: id,
          }),
          headers: {
            "Content-type": "application/json; charset=UTF-8",
          },
        })
          .then((response) => response.json())
          .then((response) => {
            if (response.result) {
              time = new Date(response.result).toISOString().slice(14, -1);
            } else {
              throw new Error("API fetch error");
            }
          })
          .catch((error) => console.error(error));
          clearInterval(interval);
          timer.textContent = time;
          div.textContent = "Congratulations, you found all the characters!\nYour time was: " + time + "!"
          div.classList.add("finaldiv");
          let namestr = "";
          let name = document.createElement("input");
          name.setAttribute("type", "text");
          name.addEventListener("change", (e) => {namestr = e.currentTarget.value});
          let button = document.createElement("button");
          button.classList.add("finalbutton");
          button.textContent = "Submit";
          button.addEventListener("click", () => {submit(namestr)});
          async function submit (user) {
            let request = await fetch("http://localhost:3000/api/score", {
          mode: "cors",
          method: "POST",
          body: JSON.stringify({
            id: id,
            user: user,
          }),
          headers: {
            "Content-type": "application/json; charset=UTF-8",
          },
        })
          .then((response) => response.json())
          .then((response) => {
            if (response.result) {
              if (response.result === "Score submitted") {
                window.location.replace("http://localhost:3000");
              }
              else {
                console.log("Score submission error");
              }
            } else {
              throw new Error("API fetch error");
            }
          })
          .catch((error) => console.error(error));
          }
          div.appendChild(name);
          div.appendChild(button);
          body.appendChild(div);
        }
      }
      const walc = document.querySelector("#walc");
      const walt = document.querySelector("#walt");
      const odlc = document.querySelector("#odlc");
      const odlt = document.querySelector("#odlt");
      const wizc = document.querySelector("#wizc");
      const wizt = document.querySelector("#wizt");
      function turnCircleGreen (ele) {
        ele.classList.remove("red");
        ele.classList.add("green");
      }
      function turnTextGreen (ele) {
        ele.classList.remove("colored");
        ele.classList.add("colorgr");
        ele.textContent = "Found";
      }
      const cdiv = document.querySelector(".canvas");
      const cable = document.querySelector(".clickable");
      let body = document.querySelector("body");
      cable.addEventListener("click", circle);
      async function circle(e) {
        let canvas = document.createElement("canvas");
        var rect = e.currentTarget.getBoundingClientRect();
        var x = e.clientX - rect.left;
        var y = e.clientY - rect.top + 150;
        // console.log("Left : " + x + " ; Top : " + y + ".");
        function drawCircle(ele, color) {
          const context = ele.getContext("2d");
          const centerX = ele.width / 2;
          const centerY = ele.height / 2;
          const radius = 50;
          context.beginPath();
          context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);
          context.lineWidth = 5;
          if (color) {
            context.strokeStyle = color;
          }
          context.stroke();
          ele.setAttribute(
            "style",
            "position: absolute; left: " +
              (x - centerX) +
              "px; top: " +
              (y - centerY) +
              "px;",
          );
        }
        const context = canvas.getContext("2d");
        const centerX = canvas.width / 2;
        const centerY = canvas.height / 2;
        const radius = 50;
        context.beginPath();
        context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);
        context.lineWidth = 5;
        // context.strokeStyle = "red";
        context.stroke();
        canvas.setAttribute(
          "style",
          "position: absolute; left: " +
            (x - centerX) +
            "px; top: " +
            (y - centerY) +
            "px;",
        );
        cdiv.appendChild(canvas);
        const div = document.createElement("div");
        div.setAttribute("id", "#onclick");

        if (!waldoFound) {
          const waldo = document.createElement("div");
          const waldopic = document.createElement("img");
          waldopic.setAttribute("src", "waldoface.png");
          waldopic.classList.add("icon");
          waldo.classList.add("waldo");
          const waldotext = document.createElement("div");
          waldotext.textContent = "Waldo";
          waldo.appendChild(waldopic);
          waldo.appendChild(waldotext);
          waldo.addEventListener("click", async () => {
            let getResponse = await waldoreq(x, y);
            let newCanvas = document.createElement("canvas");
            if (lastGuess === "y") {
              drawCircle(newCanvas, "green");
              waldoFound = true;
              waldosLeft--;
              turnCircleGreen(walc);
              turnTextGreen(walt);
              checkWin();
            } else if (lastGuess === "n") {
              drawCircle(newCanvas, "red");
            }
            cdiv.appendChild(newCanvas);
          });
          div.appendChild(waldo);
        }

        if (!odlawFound) {
          const odlaw = document.createElement("div");
          const odlawpic = document.createElement("img");
          odlawpic.setAttribute("src", "odlawface.webp");
          odlawpic.classList.add("icon");
          odlaw.classList.add("odlaw");
          const odlawtext = document.createElement("div");
          odlawtext.textContent = "Odlaw";
          odlaw.appendChild(odlawpic);
          odlaw.appendChild(odlawtext);
          odlaw.addEventListener("click", async () => {
            let getResponse = await odlawreq(x, y);
            let newCanvas = document.createElement("canvas");
            if (lastGuess === "y") {
              drawCircle(newCanvas, "green");
              odlawFound = true;
              waldosLeft--;
              turnCircleGreen(odlc);
              turnTextGreen(odlt);
              checkWin();
            } else if (lastGuess === "n") {
              drawCircle(newCanvas, "red");
            }
            cdiv.appendChild(newCanvas);
          });
          div.appendChild(odlaw);
        }

        if (!wizardFound) {
          const whitebeard = document.createElement("div");
          const whitebeardpic = document.createElement("img");
          whitebeardpic.setAttribute("src", "whitebeardface.png");
          whitebeardpic.classList.add("icon");
          whitebeard.classList.add("whitebeard");
          const whitebeardtext = document.createElement("div");
          whitebeardtext.textContent = "Wizard";
          whitebeard.appendChild(whitebeardpic);
          whitebeard.appendChild(whitebeardtext);
          whitebeard.addEventListener("click", async () => {
            let getResponse = await wizardreq(x, y);
            let newCanvas = document.createElement("canvas");
            if (lastGuess === "y") {
              drawCircle(newCanvas, "green");
              wizardFound = true;
              waldosLeft--;
              turnCircleGreen(wizc);
              turnTextGreen(wizt);
              checkWin();
            } else if (lastGuess === "n") {
              drawCircle(newCanvas, "red");
            }
            cdiv.appendChild(newCanvas);
          });
          div.appendChild(whitebeard);
        }

        let divx =
          y > 1980 && x > 2835
            ? x - 100
            : y > 1980 && x < 55
              ? x + 60
              : y > 1980
                ? x - 40
                : x > 2835
                  ? x - 160
                  : x + 60;
        let divy = y > 1980 ? y - centerY - 150 : y - centerY;
        div.setAttribute(
          "style",
          "width: 100px; height: " +
            waldosLeft * 50 +
            "px; background-color: white; position: absolute; left: " +
            divx +
            "px; top: " +
            divy +
            "px; display: flex; flex-direction: column;",
        );

        cdiv.appendChild(div);
        cable.removeEventListener("click", circle);
        cable.addEventListener("click", uncircle);
        function uncircle() {
          cable.removeEventListener("click", uncircle);
          cdiv.removeChild(div);
          cdiv.removeChild(canvas);
          cable.addEventListener("click", circle);
        }
      }
    </script>
  </body>
</html>
